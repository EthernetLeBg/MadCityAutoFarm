local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

-- Crédits
local CREDITS = {
    "DISCORD: tynvex",
    "Made By Ethernet"
}

-- Configuration
local CONFIG = {
    Title = "Game Script Manager | Ethernet",
    Size = UDim2.new(0, 800, 0, 400),
    Position = UDim2.new(0.5, -400, 0.5, -200),
    BackgroundColor = Color3.fromRGB(30, 30, 35),
    TextColor = Color3.fromRGB(255, 255, 255),
    ButtonColor = Color3.fromRGB(45, 45, 50),
    ButtonHoverColor = Color3.fromRGB(60, 60, 65),
    AccentColor = Color3.fromRGB(0, 120, 215),
    AccentHoverColor = Color3.fromRGB(0, 140, 235),
    CloseButtonColor = Color3.fromRGB(220, 60, 60),
    CloseButtonHoverColor = Color3.fromRGB(255, 80, 80),
    DiscordColor = Color3.fromRGB(88, 101, 242),
    DiscordHoverColor = Color3.fromRGB(105, 120, 255),
    SuccessColor = Color3.fromRGB(0, 200, 83),
    ErrorColor = Color3.fromRGB(255, 60, 60),
    MinSize = Vector2.new(600, 300),
    MaxSize = Vector2.new(1000, 500),
    ToggleKey = Enum.KeyCode.RightShift, -- Touche par défaut
    ToggleEnabled = true -- Option activée par défaut
}

-- Liste des jeux et leurs clés
local GAMES = {
    {
        Name = "Mad City AutoFarm",
        Key = "ethernet",
        Script = [[
repeat wait() until game:IsLoaded()
repeat wait() until game.Players.LocalPlayer.Character
repeat wait() until game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
repeat wait() until game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")

wait(2)

if _G.AutoRob == true then warn("Auto Rob already loaded.") return nil end

_G.AutoRob = true
queue_on_teleport("loadstring(game:HttpGet('https://raw.githubusercontent.com/NtReadVirtualMemory/Open-Source-Scripts/refs/heads/main/Mad%20City%20Chapter%201/Auto%20Rob.lua'))()")

for i = 1,100 do
   print("Made by Ethernet (tynvex on discord)")
end

function shop()
    local a,b = pcall(function()

        local servers = {}
        local req = request({Url = "https://games.roblox.com/v1/games/"..game.PlaceId.."/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true"})
        local body = game:GetService("HttpService"):JSONDecode(req.Body)
    
        if body and body.data then
            for i, v in next, body.data do
                if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= game.JobId then
                    table.insert(servers, 1, v.id)
                end
            end
        end
    
        print(#servers)
        if #servers > 0 then
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, servers[math.random(1, #servers)], game.Players.LocalPlayer)
        else
            if #game.Players:GetChildren() <= 1 then
                Players.LocalPlayer:Kick("\nRejoining...")
                wait()
                game:GetService("TeleportService"):Teleport(game.PlaceId, game.Players.LocalPlayer)
            else
                game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId, game.Players.LocalPlayer)
            end
        end
    
    end)
    
    print(a,b)

    if not a then
        shop()
    end 

    task.spawn(function()
        while wait(5) do
            shop()
        end
    end)
end

wait(1)

game.Players.LocalPlayer.Character:FindFirstChild("Humanoid").Died:Connect(function()
    shop()
end)

if game.Players.LocalPlayer.PlayerGui.MainGUI:FindFirstChild("TeleportEffect") then
	game.Players.LocalPlayer.PlayerGui.MainGUI.TeleportEffect:Destroy()
end
local function tp(x,y,z)
    Game.Workspace.Pyramid.Tele.Core2.CanCollide = false
    Game.Workspace.Pyramid.Tele.Core2.Transparency = 1
    Game.Workspace.Pyramid.Tele.Core2.CFrame = Game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
    task.wait()
    Game.Workspace.Pyramid.Tele.Core2.CFrame = CFrame.new(1231.14185, 51051.2344, 318.096191)
    Game.Workspace.Pyramid.Tele.Core2.Transparency = 0
    Game.Workspace.Pyramid.Tele.Core2.CanCollide = true
    task.wait()
    for i = 1, 45 do
        Game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(x,y,z)
        task.wait()
    end
end


local MiniRobberies = {
    "Cash",
    "CashRegister",
    "DiamondBox",
    "Laptop",
    "Phone",
    "Luggage",
    "ATM",
    "TV",
    "Safe"
}
local function getevent(v)
	for i, v in next, v:GetDescendants() do
		if not v:IsA("RemoteEvent") then continue end
		return v
	end
end

local function getrobbery()
    for i, v in next, workspace.ObjectSelection:GetChildren() do
		if not table.find(MiniRobberies, v.Name) then continue end
		if v:FindFirstChild("Nope") then continue end
		if not getevent(v) then continue end
		return v
    end
end

tp(-82, 86, 807)
task.wait(0.5)
for i,v in pairs(workspace.JewelryStore.JewelryBoxes:GetChildren()) do
    task.spawn(function()
        for i = 1,5 do
            workspace.JewelryStore.JewelryBoxes.JewelryManager.Event:FireServer(v)
        end
    end)
end
task.wait(2)
tp(2115, 26, 420)
task.wait(1)
repeat
	local robbery = getrobbery()
	if robbery then
		for i = 1, 20 do
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(robbery:GetPivot().Position.x,robbery:GetPivot().Position.y + 5,robbery:GetPivot().Position.z)
			getevent(robbery):FireServer()
			task.wait()
		end
	end
until getrobbery() == nil

task.wait(1)

shop()
]]
    },
    {
        Name = "Infinite Yield",
        Key = "ethernet",
        Script = [[loadstring(game:HttpGet(('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'),true))()]]
    },
    {
        Name = "Invisible",
        Key = "ethernet",
        Script = [[loadstring(game:HttpGet('https://pastebin.com/raw/3Rnd9rHf'))()]]
    },
    {
        Name = "Site 43",
        Key = "ethernet",
        Script = [[loadstring(game:HttpGet("https://raw.githubusercontent.com/e1998a/Site-43/refs/heads/main/Neptune%20Scripts"))()]]
    },
    {
        Name = "AutoFarm Site 43",
        Key = "ethernet",
        Script = [[
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local player = Players.LocalPlayer

-- Configuration des couleurs et styles
local COLORS = {
    BACKGROUND = Color3.fromRGB(30, 30, 35),
    TITLE_BAR = Color3.fromRGB(25, 25, 30),
    BUTTON_NORMAL = Color3.fromRGB(45, 45, 50),
    BUTTON_HOVER = Color3.fromRGB(55, 55, 60),
    BUTTON_ACTIVE = Color3.fromRGB(0, 170, 127),
    TEXT = Color3.fromRGB(255, 255, 255),
    CLOSE_BUTTON = Color3.fromRGB(220, 60, 60),
    CLOSE_BUTTON_HOVER = Color3.fromRGB(255, 80, 80)
}

-- Configuration des animations
local TWEEN_INFO = {
    BUTTON = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
    WINDOW = TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.Out)
}

-- Création de la GUI
local gui = Instance.new("ScreenGui")
gui.Name = "AutofarmGUI"
gui.Parent = player.PlayerGui
gui.ResetOnSpawn = false

-- Frame principal avec effet de flou
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 420, 0, 420) -- Fenêtre carrée plus petite
frame.Position = UDim2.new(0.5, -210, 0.5, -210)
frame.BackgroundColor3 = COLORS.BACKGROUND
frame.BorderSizePixel = 0
frame.Parent = gui

-- Ajout d'un effet de coin arrondi
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 8)
corner.Parent = frame

-- Barre de titre
local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, 0, 0, 40)
titleBar.BackgroundColor3 = COLORS.TITLE_BAR
titleBar.BorderSizePixel = 0
titleBar.Parent = frame

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 8)
titleCorner.Parent = titleBar

local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(0.8, 0, 1, 0)
titleLabel.Position = UDim2.new(0, 15, 0, 0)
titleLabel.Text = "Site 43 Autofarm - Made By Ethernet"
titleLabel.TextColor3 = COLORS.TEXT
titleLabel.BackgroundTransparency = 1
titleLabel.TextSize = 16
titleLabel.Font = Enum.Font.GothamBold
titleLabel.Parent = titleBar

-- Bouton de fermeture
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 40, 0, 40)
closeButton.Position = UDim2.new(1, -40, 0, 0)
closeButton.Text = "×"
closeButton.TextColor3 = COLORS.TEXT
closeButton.BackgroundColor3 = COLORS.CLOSE_BUTTON
closeButton.TextSize = 24
closeButton.Font = Enum.Font.GothamBold
closeButton.Parent = titleBar

local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(0, 8)
closeCorner.Parent = closeButton

-- Fonction pour créer un bouton stylisé
local function createStyledButton(name, position)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 110, 0, 44) -- Boutons plus petits
    button.Position = position
    button.Text = name
    button.BackgroundColor3 = COLORS.BUTTON_NORMAL
    button.TextColor3 = COLORS.TEXT
    button.TextSize = 18
    button.Font = Enum.Font.GothamSemibold
    button.Parent = frame
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 8)
    buttonCorner.Parent = button
    
    -- Effet de survol
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TWEEN_INFO.BUTTON, {
            BackgroundColor3 = COLORS.BUTTON_HOVER
        }):Play()
    end)
    
    button.MouseLeave:Connect(function()
        if not (button.Text:match("ON")) then
            TweenService:Create(button, TWEEN_INFO.BUTTON, {
                BackgroundColor3 = COLORS.BUTTON_NORMAL
            }):Play()
        end
    end)
    
    return button
end

-- Création des boutons sur une seule ligne, centrés
local buttonSpacing = 30
local totalWidth = 420
local buttonWidth = 110
local totalButtonsWidth = buttonWidth * 3 + buttonSpacing * 2
local startX = (totalWidth - totalButtonsWidth) / 2
local buttonY = 160

local autoclickerButton = createStyledButton("Autoclicker: OFF", UDim2.new(0, startX, 0, buttonY))
local autofarmButton = createStyledButton("Autofarm: OFF", UDim2.new(0, startX + buttonWidth + buttonSpacing, 0, buttonY))
local historyButton = createStyledButton("History: OFF", UDim2.new(0, startX + (buttonWidth + buttonSpacing) * 2, 0, buttonY))

-- Ajout du bouton Reset
local resetButton = createStyledButton("Reset", UDim2.new(0.5, -buttonWidth/2, 0, buttonY + buttonSpacing + 44))

-- Création du compteur de téléportations
local teleportCounter = Instance.new("TextLabel")
teleportCounter.Size = UDim2.new(0, 300, 0, 36)
teleportCounter.Position = UDim2.new(0.5, -150, 0, 340)
teleportCounter.BackgroundTransparency = 1
teleportCounter.Text = "Tâches Nettoyées: 0 | Argent: $0"
teleportCounter.TextColor3 = COLORS.TEXT
teleportCounter.TextSize = 18
teleportCounter.Font = Enum.Font.GothamSemibold
teleportCounter.TextXAlignment = Enum.TextXAlignment.Center
teleportCounter.Parent = frame

-- Animation d'ouverture avec la nouvelle position
local function animateOpen()
    frame.Position = UDim2.new(0.5, -210, 0.5, -210)
    frame.BackgroundTransparency = 1
    frame.Visible = true
    
    local openTween = TweenService:Create(frame, TWEEN_INFO.WINDOW, {
        BackgroundTransparency = 0
    })
    openTween:Play()
end

-- Animation de fermeture
local function animateClose()
    local closeTween = TweenService:Create(frame, TWEEN_INFO.WINDOW, {
        BackgroundTransparency = 1
    })
    closeTween:Play()
    closeTween.Completed:Connect(function()
        frame.Visible = false
    end)
end

-- Variables d'état
local autoclickerActive = false
local autofarmActive = false
local historyActive = false
local autoclickerConnection
local autofarmConnection
local dragging = false
local dragStart
local startPos
local lastPositionIndex = 1
local teleportCount = 0

-- Positions pour l'autofarm
local positions = {
    Vector3.new(-656.76, 4.82, 275.61),
    Vector3.new(-655.73, 4.82, 266.99),
    Vector3.new(-574.21, 3.93, 222.33),
    Vector3.new(-566.00, 3.82, 221.44),
    Vector3.new(-530.94, 4.82, 261.82),
    Vector3.new(-476.63, 4.82, 254.80),
    Vector3.new(-432.19, 4.82, 278.94),
    Vector3.new(-426.84, 4.82, 307.87),
    Vector3.new(-440.59, 4.82, 296.19),
    Vector3.new(-422.04, 4.82, 240.93),
    Vector3.new(-413.22, 4.82, 264.30),
    Vector3.new(-416.64, 4.84, 387.47),
    Vector3.new(-423.35, 4.76, 422.63),
    Vector3.new(-413.73, 4.76, 432.82),
    Vector3.new(-423.71, 4.82, 169.03),
    Vector3.new(-404.01, 4.82, 151.64),
    Vector3.new(-355.63, -1.18, 139.51),
    Vector3.new(-353.66, -1.18, 136.27),
    Vector3.new(-350.94, -14.20, 181.33),
    Vector3.new(-362.52, -14.20, 186.01),
    Vector3.new(-348.37, -14.20, 202.88),
    Vector3.new(-300.99, -14.20, 218.71),
    Vector3.new(-285.74, -14.20, 236.73),
    Vector3.new(-262.74, -14.20, 218.07),
    Vector3.new(-347.27, -14.20, 254.38),
    Vector3.new(-347.12, -14.20, 267.75),
    Vector3.new(-349.04, -14.20, 271.13),
    Vector3.new(-386.35, -14.20, 270.19),
    Vector3.new(-418.63, -14.20, 254.85),
    Vector3.new(-399.35, 4.82, 166.04),
    Vector3.new(-400.36, 4.82, 195.20),
    Vector3.new(-330.14, 9.57, 192.93),
    Vector3.new(-324.77, 9.57, 198.66),
    Vector3.new(-286.78, 9.57, 198.25),
    Vector3.new(-407.89, 4.76, 435.32),
    Vector3.new(-420.47, 4.76, 427.59),
    Vector3.new(-412.09, 4.76, 516.06),
    Vector3.new(-421.13, 4.76, 542.82),
    Vector3.new(-428.49, 4.77, 545.72),
    Vector3.new(-429.46, 4.79, 553.70),
    Vector3.new(-413.59, 4.76, 551.85),
    Vector3.new(-426.90, 4.77, 561.09),
    Vector3.new(-440.41, 4.77, 553.70),
    Vector3.new(-386.01, -15.24, 582.53),
    Vector3.new(-410.10, 4.76, 518.33),
    Vector3.new(-411.71, 4.76, 551.59),
    Vector3.new(-429.05, 4.77, 563.13),
    Vector3.new(-430.73, 4.76, 546.07),
    Vector3.new(-442.81, 4.76, 553.61),
    Vector3.new(-428.17, 4.76, 556.00),
    Vector3.new(-789.41, 4.78, 401.73),
    Vector3.new(-797.41, 4.78, 375.38),
    Vector3.new(-1052.28, 4.76, 330.91),
    Vector3.new(-1056.82, 4.76, 332.82),
    Vector3.new(-719.58, 4.80, 477.82),
    Vector3.new(-758.75, 40.51, 513.99),
    Vector3.new(-762.06, 40.51, 509.69),
    Vector3.new(-766.29, 40.51, 547.41),
    Vector3.new(-961.40, 4.74, 513.17),
    Vector3.new(-654.19, 4.82, 269.07),
    Vector3.new(-656.53, 4.82, 271.07),
    Vector3.new(-657.49, 4.82, 265.38),
    Vector3.new(-767.02, 4.76, 412.65),
    Vector3.new(-573.88, 3.82, 220.49),
    Vector3.new(-563.76, 3.82, 217.35),
    Vector3.new(-440.11, 4.82, 298.52),
    Vector3.new(-486.80, 4.82, 329.98),
    Vector3.new(-706.95, 4.80, 486.98),
    Vector3.new(-710.25, 4.80, 488.87),
    Vector3.new(-399.94, 4.82, 168.54),
    Vector3.new(-399.78, 4.82, 197.13),
    Vector3.new(-400.03, 4.82, 223.97),
    Vector3.new(-399.64, 4.82, 219.83),
    Vector3.new(-332.10, 9.57, 195.86),
    Vector3.new(-313.66, 44.76, 391.33),
    Vector3.new(-267.46, 44.76, 380.51),
    Vector3.new(-475.11, 4.82, 251.83),
    Vector3.new(-344.85, -14.20, 255.05),
    Vector3.new(-420.69, 4.82, 238.08),
    Vector3.new(-423.00, 4.82, 166.70),
    Vector3.new(-401.77, 4.82, 150.46),
    Vector3.new(-244.18, -14.20, 191.95),
    Vector3.new(-411.68, 4.76, 435.00),
    Vector3.new(-347.87, -14.10, 182.47),
    Vector3.new(-346.69, -14.20, 204.68),
    Vector3.new(-365.23, -14.20, 187.47),
    Vector3.new(-283.93, -14.20, 238.18),
    Vector3.new(-527.89, 4.82, 263.01),
    Vector3.new(-552.08, 4.82, 237.33),
    Vector3.new(-548.42, 4.82, 227.78),
    Vector3.new(-429.81, 4.82, 280.10),
    Vector3.new(-415.72, 4.84, 391.16),
    Vector3.new(-638.43, 4.76, 449.79),
    Vector3.new(-619.12, 4.76, 472.99),
    Vector3.new(-428.32, 4.82, 310.83),
    Vector3.new(-631.28, 5.16, 473.36),
    Vector3.new(-622.63, 4.94, 450.79),
    Vector3.new(-644.03, 4.76, 426.84),
    Vector3.new(-699.17, 4.76, 427.15),
    Vector3.new(-706.86, 4.76, 419.92),
    Vector3.new(-387.89, -14.20, 271.57),
    Vector3.new(-741.16, 4.76, 408.98),
    Vector3.new(-344.22, -14.20, 268.61),
    Vector3.new(-410.72, 4.82, 267.34),
    Vector3.new(-765.29, 4.76, 443.78),
    Vector3.new(-830.14, 4.77, 403.21),
    Vector3.new(-911.50, 4.76, 437.82),
    Vector3.new(-913.92, 4.76, 440.65),
    Vector3.new(-973.64, 4.74, 516.68),
    Vector3.new(-976.79, 4.74, 513.47),
    Vector3.new(-420.98, -14.20, 254.84),
    Vector3.new(-985.35, 9.22, 536.26),
    Vector3.new(-984.40, 9.22, 539.91),
    Vector3.new(-348.55, -14.20, 274.07),
    Vector3.new(-483.04, 4.82, 331.10),
    Vector3.new(-261.79, -14.20, 216.42),
    Vector3.new(-252.28, -14.20, 154.08),
    Vector3.new(-246.86, -14.20, 145.03),
    Vector3.new(-299.59, -14.20, 217.83),
    Vector3.new(-326.65, 9.91, 202.01),
    Vector3.new(-283.77, 9.57, 197.27),
    Vector3.new(-786.26, 4.78, 395.06),
    Vector3.new(-352.56, -1.18, 139.47),
    Vector3.new(-720.34, 4.76, 446.69),
    Vector3.new(-423.70, 4.76, 426.42)
}

-- Copie automatique de la position au chargement du personnage
local function copyPosition()
    local character = player.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        local position = character.HumanoidRootPart.Position
        local positionText = string.format("%.2f, %.2f, %.2f", position.X, position.Y, position.Z)
        pcall(function()
            setclipboard(positionText)
            print("Position copiée automatiquement : " .. positionText)
        end)
    else
        warn("Personnage ou HumanoidRootPart introuvable !")
    end
end

if player.Character then
    copyPosition()
else
    player.CharacterAdded:Connect(copyPosition)
end

-- Fonction pour vérifier si la souris est sur la GUI
local function isMouseOverGUI()
    local mouse = player:GetMouse()
    local mousePos = Vector2.new(mouse.X, mouse.Y)
    local framePos = frame.AbsolutePosition
    local frameSize = frame.AbsoluteSize
    
    return mousePos.X >= framePos.X and mousePos.X <= framePos.X + frameSize.X
        and mousePos.Y >= framePos.Y and mousePos.Y <= framePos.Y + frameSize.Y
end

-- Autoclicker
local function toggleAutoclicker()
    autoclickerActive = not autoclickerActive
    local newColor = autoclickerActive and COLORS.BUTTON_ACTIVE or COLORS.BUTTON_NORMAL
    local newText = autoclickerActive and "Autoclicker: ON" or "Autoclicker: OFF"
    
    TweenService:Create(autoclickerButton, TWEEN_INFO.BUTTON, {
        BackgroundColor3 = newColor
    }):Play()
    autoclickerButton.Text = newText
    
    if autoclickerActive then
        autoclickerConnection = RunService.Heartbeat:Connect(function()
            if player.Character and player.Character:FindFirstChild("Humanoid") then
                -- Vérifier si la souris n'est pas sur la GUI avant de cliquer
                if not isMouseOverGUI() then
                    -- Utiliser le centre de l'écran pour le clic
                    local screenCenter = Vector2.new(workspace.CurrentCamera.ViewportSize.X/2, workspace.CurrentCamera.ViewportSize.Y/2)
                    game:GetService("VirtualInputManager"):SendMouseButtonEvent(screenCenter.X, screenCenter.Y, 0, true, game, 0)
                    wait(0.001)
                    game:GetService("VirtualInputManager"):SendMouseButtonEvent(screenCenter.X, screenCenter.Y, 0, false, game, 0)
                end
            end
        end)
    else
        if autoclickerConnection then
            autoclickerConnection:Disconnect()
            autoclickerConnection = nil
        end
    end
end

-- History
local function toggleHistory()
    historyActive = not historyActive
    local newColor = historyActive and COLORS.BUTTON_ACTIVE or COLORS.BUTTON_NORMAL
    local newText = historyActive and "History: ON" or "History: OFF"
    
    TweenService:Create(historyButton, TWEEN_INFO.BUTTON, {
        BackgroundColor3 = newColor
    }):Play()
    historyButton.Text = newText
end

-- Autofarm
local function toggleAutofarm()
    autofarmActive = not autofarmActive
    local newColor = autofarmActive and COLORS.BUTTON_ACTIVE or COLORS.BUTTON_NORMAL
    local newText = autofarmActive and "Autofarm: ON" or "Autofarm: OFF"
    
    TweenService:Create(autofarmButton, TWEEN_INFO.BUTTON, {
        BackgroundColor3 = newColor
    }):Play()
    autofarmButton.Text = newText
    
    if autofarmActive then
        teleportCount = 0
        teleportCounter.Text = "Tâches Nettoyées: 0 | Argent: $0"
        autofarmConnection = spawn(function()
            local index = historyActive and lastPositionIndex or 1
            while autofarmActive do
                if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                    player.Character.HumanoidRootPart.CFrame = CFrame.new(positions[index])
                    lastPositionIndex = index
                    teleportCount = teleportCount + 1
                    teleportCounter.Text = "Tâches Nettoyées: " .. teleportCount .. " | Argent: $" .. (teleportCount * 10)
                    wait(5)
                    index = index % #positions + 1
                else
                    wait(1)
                end
            end
        end)
    else
        if autofarmConnection then
            autofarmConnection:Disconnect()
            autofarmConnection = nil
        end
    end
end

-- Fonction pour réinitialiser le compteur
local function resetCounter()
    teleportCount = 0
    teleportCounter.Text = "Tâches Nettoyées: 0 | Argent: $0"
end

-- Gestion du drag avec animations
titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
    end
end)

titleBar.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

titleBar.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

-- Bouton de fermeture avec animation
closeButton.MouseEnter:Connect(function()
    TweenService:Create(closeButton, TWEEN_INFO.BUTTON, {
        BackgroundColor3 = COLORS.CLOSE_BUTTON_HOVER
    }):Play()
end)

closeButton.MouseLeave:Connect(function()
    TweenService:Create(closeButton, TWEEN_INFO.BUTTON, {
        BackgroundColor3 = COLORS.CLOSE_BUTTON
    }):Play()
end)

closeButton.MouseButton1Click:Connect(function()
    animateClose()
end)

-- Touche H pour ouvrir/fermer avec animation
UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    if not gameProcessedEvent and input.KeyCode == Enum.KeyCode.H then
        if frame.Visible then
            animateClose()
        else
            animateOpen()
        end
    end
end)

-- Connexion des boutons
autoclickerButton.MouseButton1Click:Connect(toggleAutoclicker)
autofarmButton.MouseButton1Click:Connect(toggleAutofarm)
historyButton.MouseButton1Click:Connect(toggleHistory)
resetButton.MouseButton1Click:Connect(resetCounter)

-- Animation initiale
animateOpen()
]]
    }
}

-- Création de la fenêtre principale
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "GameScriptManagerGUI"
ScreenGui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")

local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = CONFIG.Size
MainFrame.Position = CONFIG.Position
MainFrame.BackgroundColor3 = CONFIG.BackgroundColor
MainFrame.BorderSizePixel = 0
MainFrame.Parent = ScreenGui

-- Ajout de l'ombre
local Shadow = Instance.new("ImageLabel")
Shadow.Name = "Shadow"
Shadow.Size = UDim2.new(1, 20, 1, 20)
Shadow.Position = UDim2.new(0, -10, 0, -10)
Shadow.BackgroundTransparency = 1
Shadow.Image = "rbxassetid://5554236805"
Shadow.ImageColor3 = Color3.new(0, 0, 0)
Shadow.ImageTransparency = 0.6
Shadow.ScaleType = Enum.ScaleType.Slice
Shadow.SliceCenter = Rect.new(23, 23, 277, 277)
Shadow.Parent = MainFrame

-- Barre de titre
local TitleBar = Instance.new("Frame")
TitleBar.Name = "TitleBar"
TitleBar.Size = UDim2.new(1, 0, 0, 40)
TitleBar.Position = UDim2.new(0, 0, 0, 0)
TitleBar.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
TitleBar.BorderSizePixel = 0
TitleBar.Parent = MainFrame

-- Titre
local Title = Instance.new("TextLabel")
Title.Name = "Title"
Title.Size = UDim2.new(1, -100, 1, 0)
Title.Position = UDim2.new(0, 10, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = CONFIG.Title
Title.TextColor3 = CONFIG.TextColor
Title.TextSize = 18
Title.Font = Enum.Font.GothamBold
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.Parent = TitleBar

-- Bouton de fermeture
local CloseButton = Instance.new("TextButton")
CloseButton.Name = "CloseButton"
CloseButton.Size = UDim2.new(0, 30, 0, 30)
CloseButton.Position = UDim2.new(1, -40, 0, 5)
CloseButton.BackgroundColor3 = CONFIG.CloseButtonColor
CloseButton.Text = "X"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.TextSize = 16
CloseButton.Font = Enum.Font.GothamBold
CloseButton.Parent = TitleBar

-- Bouton Discord
local DiscordButton = Instance.new("TextButton")
DiscordButton.Name = "DiscordButton"
DiscordButton.Size = UDim2.new(0, 30, 0, 30)
DiscordButton.Position = UDim2.new(1, -80, 0, 5)
DiscordButton.BackgroundColor3 = CONFIG.DiscordColor
DiscordButton.Text = "D"
DiscordButton.TextColor3 = Color3.fromRGB(255, 255, 255)
DiscordButton.TextSize = 16
DiscordButton.Font = Enum.Font.GothamBold
DiscordButton.Parent = TitleBar

-- Animation du bouton Discord
DiscordButton.MouseEnter:Connect(function()
    TweenService:Create(DiscordButton, TweenInfo.new(0.2), {BackgroundColor3 = CONFIG.DiscordHoverColor}):Play()
end)

DiscordButton.MouseLeave:Connect(function()
    TweenService:Create(DiscordButton, TweenInfo.new(0.2), {BackgroundColor3 = CONFIG.DiscordColor}):Play()
end)

-- Fonction pour copier le lien Discord
DiscordButton.MouseButton1Click:Connect(function()
    setclipboard("discord.gg/KEYhyhnygP")
    StatusLabel.Text = "Discord link copied!"
    StatusLabel.TextColor3 = CONFIG.SuccessColor
    wait(2)
    updateCredits()
end)

-- Ajouter un bouton Paramètres dans la barre de titre
local SettingsButton = Instance.new("TextButton")
SettingsButton.Name = "SettingsButton"
SettingsButton.Size = UDim2.new(0, 30, 0, 30)
SettingsButton.Position = UDim2.new(1, -120, 0, 5)
SettingsButton.BackgroundColor3 = CONFIG.ButtonColor
SettingsButton.Text = "⚙"
SettingsButton.TextColor3 = CONFIG.TextColor
SettingsButton.TextSize = 16
SettingsButton.Font = Enum.Font.GothamBold
SettingsButton.Parent = TitleBar

-- Animation du bouton Paramètres
SettingsButton.MouseEnter:Connect(function()
    TweenService:Create(SettingsButton, TweenInfo.new(0.2), {BackgroundColor3 = CONFIG.ButtonHoverColor}):Play()
end)

SettingsButton.MouseLeave:Connect(function()
    TweenService:Create(SettingsButton, TweenInfo.new(0.2), {BackgroundColor3 = CONFIG.ButtonColor}):Play()
end)

-- Supprimer la section intégrée dans MainContainer si elle existe
if SettingsSection then SettingsSection:Destroy() end

-- Créer la fenêtre des paramètres flottante
local SettingsFrame = Instance.new("Frame")
SettingsFrame.Name = "SettingsFrame"
SettingsFrame.Size = UDim2.new(0, 300, 0, 200)
SettingsFrame.Position = UDim2.new(0, 0, 0, 0)
SettingsFrame.BackgroundColor3 = CONFIG.BackgroundColor
SettingsFrame.BorderSizePixel = 0
SettingsFrame.Visible = false
SettingsFrame.Parent = ScreenGui

-- Ombre
local SettingsShadow = Instance.new("ImageLabel")
SettingsShadow.Name = "Shadow"
SettingsShadow.Size = UDim2.new(1, 20, 1, 20)
SettingsShadow.Position = UDim2.new(0, -10, 0, -10)
SettingsShadow.BackgroundTransparency = 1
SettingsShadow.Image = "rbxassetid://5554236805"
SettingsShadow.ImageColor3 = Color3.new(0, 0, 0)
SettingsShadow.ImageTransparency = 0.6
SettingsShadow.ScaleType = Enum.ScaleType.Slice
SettingsShadow.SliceCenter = Rect.new(23, 23, 277, 277)
SettingsShadow.Parent = SettingsFrame

-- Titre
local SettingsTitle = Instance.new("TextLabel")
SettingsTitle.Name = "Title"
SettingsTitle.Size = UDim2.new(1, 0, 0, 40)
SettingsTitle.BackgroundTransparency = 1
SettingsTitle.Text = "SETTINGS"
SettingsTitle.TextColor3 = CONFIG.TextColor
SettingsTitle.TextSize = 18
SettingsTitle.Font = Enum.Font.GothamBold
SettingsTitle.Parent = SettingsFrame

-- Bouton de fermeture
local SettingsCloseButton = Instance.new("TextButton")
SettingsCloseButton.Name = "CloseButton"
SettingsCloseButton.Size = UDim2.new(0, 30, 0, 30)
SettingsCloseButton.Position = UDim2.new(1, -40, 0, 5)
SettingsCloseButton.BackgroundColor3 = CONFIG.CloseButtonColor
SettingsCloseButton.Text = "X"
SettingsCloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
SettingsCloseButton.TextSize = 16
SettingsCloseButton.Font = Enum.Font.GothamBold
SettingsCloseButton.Parent = SettingsFrame

SettingsCloseButton.MouseEnter:Connect(function()
    TweenService:Create(SettingsCloseButton, TweenInfo.new(0.2), {BackgroundColor3 = CONFIG.CloseButtonHoverColor}):Play()
end)
SettingsCloseButton.MouseLeave:Connect(function()
    TweenService:Create(SettingsCloseButton, TweenInfo.new(0.2), {BackgroundColor3 = CONFIG.CloseButtonColor}):Play()
end)
SettingsCloseButton.MouseButton1Click:Connect(function()
    SettingsFrame.Visible = false
end)

-- Option de touche de toggle
local ToggleKeyFrame = Instance.new("Frame")
ToggleKeyFrame.Name = "ToggleKeyFrame"
ToggleKeyFrame.Size = UDim2.new(1, -20, 0, 40)
ToggleKeyFrame.Position = UDim2.new(0, 10, 0, 50)
ToggleKeyFrame.BackgroundColor3 = CONFIG.ButtonColor
ToggleKeyFrame.BorderSizePixel = 0
ToggleKeyFrame.Parent = SettingsFrame

local ToggleKeyLabel = Instance.new("TextLabel")
ToggleKeyLabel.Name = "Label"
ToggleKeyLabel.Size = UDim2.new(0.6, 0, 1, 0)
ToggleKeyLabel.BackgroundTransparency = 1
ToggleKeyLabel.Text = "Touche de toggle:"
ToggleKeyLabel.TextColor3 = CONFIG.TextColor
ToggleKeyLabel.TextSize = 14
ToggleKeyLabel.Font = Enum.Font.GothamSemibold
ToggleKeyLabel.TextXAlignment = Enum.TextXAlignment.Left
ToggleKeyLabel.Parent = ToggleKeyFrame

local ToggleKeyButton = Instance.new("TextButton")
ToggleKeyButton.Name = "KeyButton"
ToggleKeyButton.Size = UDim2.new(0.4, -10, 0, 30)
ToggleKeyButton.Position = UDim2.new(0.6, 0, 0, 5)
ToggleKeyButton.BackgroundColor3 = CONFIG.AccentColor
ToggleKeyButton.Text = CONFIG.ToggleKey.Name
ToggleKeyButton.TextColor3 = CONFIG.TextColor
ToggleKeyButton.TextSize = 14
ToggleKeyButton.Font = Enum.Font.GothamSemibold
ToggleKeyButton.Parent = ToggleKeyFrame

-- Option d'activation
local ToggleEnabledFrame = Instance.new("Frame")
ToggleEnabledFrame.Name = "ToggleEnabledFrame"
ToggleEnabledFrame.Size = UDim2.new(1, -20, 0, 40)
ToggleEnabledFrame.Position = UDim2.new(0, 10, 0, 100)
ToggleEnabledFrame.BackgroundColor3 = CONFIG.ButtonColor
ToggleEnabledFrame.BorderSizePixel = 0
ToggleEnabledFrame.Parent = SettingsFrame

local ToggleEnabledLabel = Instance.new("TextLabel")
ToggleEnabledLabel.Name = "Label"
ToggleEnabledLabel.Size = UDim2.new(0.6, 0, 1, 0)
ToggleEnabledLabel.BackgroundTransparency = 1
ToggleEnabledLabel.Text = "Activer le toggle:"
ToggleEnabledLabel.TextColor3 = CONFIG.TextColor
ToggleEnabledLabel.TextSize = 14
ToggleEnabledLabel.Font = Enum.Font.GothamSemibold
ToggleEnabledLabel.TextXAlignment = Enum.TextXAlignment.Left
ToggleEnabledLabel.Parent = ToggleEnabledFrame

local ToggleEnabledButton = Instance.new("TextButton")
ToggleEnabledButton.Name = "EnabledButton"
ToggleEnabledButton.Size = UDim2.new(0.4, -10, 0, 30)
ToggleEnabledButton.Position = UDim2.new(0.6, 0, 0, 5)
ToggleEnabledButton.BackgroundColor3 = CONFIG.ToggleEnabled and CONFIG.SuccessColor or CONFIG.ErrorColor
ToggleEnabledButton.Text = CONFIG.ToggleEnabled and "ON" or "OFF"
ToggleEnabledButton.TextColor3 = CONFIG.TextColor
ToggleEnabledButton.TextSize = 14
ToggleEnabledButton.Font = Enum.Font.GothamSemibold
ToggleEnabledButton.Parent = ToggleEnabledFrame

-- Variable pour savoir si la fenêtre des paramètres a été déplacée manuellement
local settingsMoved = false

-- Fonction pour coller la fenêtre des paramètres à gauche du GUI principal
local function stickSettingsToMain()
    local mainAbsPos = MainFrame.AbsolutePosition
    local settingsWidth = SettingsFrame.AbsoluteSize.X
    SettingsFrame.Position = UDim2.new(0, mainAbsPos.X - settingsWidth - 10, 0, mainAbsPos.Y)
end

-- Ouvrir/fermer les paramètres et coller à gauche du GUI si pas déplacé
SettingsButton.MouseButton1Click:Connect(function()
    SettingsFrame.Visible = not SettingsFrame.Visible
    if SettingsFrame.Visible and not settingsMoved then
        stickSettingsToMain()
    end
end)

-- Quand on commence à déplacer la fenêtre des paramètres, on note qu'elle a été déplacée
SettingsTitle.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        settingsDragging = true
        settingsDragStart = input.Position
        settingsStartPos = SettingsFrame.Position
        settingsMoved = true
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                settingsDragging = false
            end
        end)
    end
end)

-- Quand on ferme le GUI principal, fermer aussi la fenêtre des paramètres
CloseButton.MouseButton1Click:Connect(function()
    SettingsFrame.Visible = false
    ScreenGui:Destroy()
end)

-- Mettre à jour la position des paramètres en temps réel pendant le drag/resize
UserInputService.InputChanged:Connect(function(input)
    if dragging or resizing then
        stickSettingsToMain()
    end
end)

-- Fonction pour changer la touche
local waitingForKey = false
ToggleKeyButton.MouseButton1Click:Connect(function()
    if not waitingForKey then
        waitingForKey = true
        ToggleKeyButton.Text = "Appuyez sur une touche..."
        ToggleKeyButton.BackgroundColor3 = CONFIG.ButtonHoverColor
        
        local connection
        connection = UserInputService.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.Keyboard then
                CONFIG.ToggleKey = input.KeyCode
                ToggleKeyButton.Text = input.KeyCode.Name
                ToggleKeyButton.BackgroundColor3 = CONFIG.AccentColor
                waitingForKey = false
                connection:Disconnect()
            end
        end)
    end
end)

-- Fonction pour activer/désactiver le toggle
ToggleEnabledButton.MouseButton1Click:Connect(function()
    CONFIG.ToggleEnabled = not CONFIG.ToggleEnabled
    ToggleEnabledButton.BackgroundColor3 = CONFIG.ToggleEnabled and CONFIG.SuccessColor or CONFIG.ErrorColor
    ToggleEnabledButton.Text = CONFIG.ToggleEnabled and "ON" or "OFF"
end)

-- Conteneur principal
local MainContainer = Instance.new("Frame")
MainContainer.Name = "MainContainer"
MainContainer.Size = UDim2.new(1, -20, 1, -60)
MainContainer.Position = UDim2.new(0, 10, 0, 50)
MainContainer.BackgroundTransparency = 1
MainContainer.Parent = MainFrame

-- Liste des jeux
local GameList = Instance.new("ScrollingFrame")
GameList.Name = "GameList"
GameList.Size = UDim2.new(0.4, -10, 1, 0)
GameList.Position = UDim2.new(0, 0, 0, 0)
GameList.BackgroundTransparency = 1
GameList.BorderSizePixel = 0
GameList.ScrollBarThickness = 6
GameList.ScrollBarImageColor3 = CONFIG.AccentColor
GameList.Parent = MainContainer

-- Zone de clé
local KeyFrame = Instance.new("Frame")
KeyFrame.Name = "KeyFrame"
KeyFrame.Size = UDim2.new(0.6, -10, 0, 100)
KeyFrame.Position = UDim2.new(0.4, 10, 0, 0)
KeyFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
KeyFrame.BorderSizePixel = 0
KeyFrame.Parent = MainContainer

local KeyLabel = Instance.new("TextLabel")
KeyLabel.Name = "KeyLabel"
KeyLabel.Size = UDim2.new(1, 0, 0, 30)
KeyLabel.Position = UDim2.new(0, 0, 0, 0)
KeyLabel.BackgroundTransparency = 1
KeyLabel.Text = "Enter The Key"
KeyLabel.TextColor3 = CONFIG.TextColor
KeyLabel.TextSize = 16
KeyLabel.Font = Enum.Font.GothamSemibold
KeyLabel.Parent = KeyFrame

local KeyInput = Instance.new("TextBox")
KeyInput.Name = "KeyInput"
KeyInput.Size = UDim2.new(1, -20, 0, 40)
KeyInput.Position = UDim2.new(0, 10, 0, 40)
KeyInput.BackgroundColor3 = Color3.fromRGB(45, 45, 50)
KeyInput.BorderSizePixel = 0
KeyInput.Text = ""
KeyInput.PlaceholderText = "Key..."
KeyInput.TextColor3 = CONFIG.TextColor
KeyInput.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
KeyInput.TextSize = 14
KeyInput.Font = Enum.Font.Gotham
KeyInput.Parent = KeyFrame

-- Bouton d'exécution
local ExecuteButton = Instance.new("TextButton")
ExecuteButton.Name = "ExecuteButton"
ExecuteButton.Size = UDim2.new(0.6, -10, 0, 45)
ExecuteButton.Position = UDim2.new(0.4, 10, 0, 110)
ExecuteButton.BackgroundColor3 = CONFIG.AccentColor
ExecuteButton.Text = "Exécuter le Script"
ExecuteButton.TextColor3 = CONFIG.TextColor
ExecuteButton.TextSize = 16
ExecuteButton.Font = Enum.Font.GothamSemibold
ExecuteButton.Parent = MainContainer

-- Zone de statut
local StatusLabel = Instance.new("TextLabel")
StatusLabel.Name = "StatusLabel"
StatusLabel.Size = UDim2.new(0.6, -10, 0, 30)
StatusLabel.Position = UDim2.new(0.4, 10, 0, 165)
StatusLabel.BackgroundTransparency = 1
StatusLabel.Text = "DISCORD: tynvex"
StatusLabel.TextColor3 = CONFIG.TextColor
StatusLabel.TextSize = 18
StatusLabel.Font = Enum.Font.GothamBold
StatusLabel.Parent = MainContainer

-- Bouton de redimensionnement
local ResizeButton = Instance.new("TextButton")
ResizeButton.Name = "ResizeButton"
ResizeButton.Size = UDim2.new(0, 20, 0, 20)
ResizeButton.Position = UDim2.new(1, -20, 1, -20)
ResizeButton.BackgroundColor3 = CONFIG.AccentColor
ResizeButton.Text = "↔"
ResizeButton.TextColor3 = CONFIG.TextColor
ResizeButton.TextSize = 16
ResizeButton.Font = Enum.Font.GothamBold
ResizeButton.Parent = MainFrame

-- Variables
local selectedGame = nil
local resizing = false
local resizeStart
local startSize

-- Variables pour le drag de la fenêtre des paramètres
local settingsDragging = false
local settingsDragInput
local settingsDragStart
local settingsStartPos

local function updateSettingsDrag(input)
    local delta = input.Position - settingsDragStart
    SettingsFrame.Position = UDim2.new(0, settingsStartPos.X.Offset + delta.X, 0, settingsStartPos.Y.Offset + delta.Y)
end

SettingsTitle.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        settingsDragging = true
        settingsDragStart = input.Position
        settingsStartPos = SettingsFrame.Position
        settingsMoved = true
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                settingsDragging = false
            end
        end)
    end
end)

SettingsTitle.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        settingsDragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == settingsDragInput and settingsDragging then
        updateSettingsDrag(input)
    end
end)

-- Fonction pour créer un bouton de jeu
local function createGameButton(gameInfo, index)
    local button = Instance.new("TextButton")
    button.Name = gameInfo.Name
    button.Size = UDim2.new(1, -10, 0, 45)
    button.Position = UDim2.new(0, 5, 0, (index - 1) * 55)
    button.BackgroundColor3 = CONFIG.ButtonColor
    button.Text = gameInfo.Name
    button.TextColor3 = CONFIG.TextColor
    button.TextSize = 16
    button.Font = Enum.Font.GothamSemibold
    button.Parent = GameList
    
    -- Animation au survol
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = CONFIG.ButtonHoverColor}):Play()
    end)
    
    button.MouseLeave:Connect(function()
        if selectedGame ~= gameInfo then
            TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = CONFIG.ButtonColor}):Play()
        end
    end)
    
    -- Sélection du jeu
    button.MouseButton1Click:Connect(function()
        -- Réinitialiser la couleur des autres boutons
        for _, child in pairs(GameList:GetChildren()) do
            if child:IsA("TextButton") then
                TweenService:Create(child, TweenInfo.new(0.2), {BackgroundColor3 = CONFIG.ButtonColor}):Play()
            end
        end
        
        -- Mettre en évidence le bouton sélectionné
        TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = CONFIG.AccentColor}):Play()
        selectedGame = gameInfo
        StatusLabel.Text = "Game selected : " .. gameInfo.Name
        StatusLabel.TextColor3 = CONFIG.TextColor
    end)
    
    return button
end

-- Création des boutons de jeu
for i, gameInfo in ipairs(GAMES) do
    createGameButton(gameInfo, i)
end

-- Animation du bouton d'exécution
ExecuteButton.MouseEnter:Connect(function()
    TweenService:Create(ExecuteButton, TweenInfo.new(0.2), {BackgroundColor3 = CONFIG.AccentHoverColor}):Play()
end)

ExecuteButton.MouseLeave:Connect(function()
    TweenService:Create(ExecuteButton, TweenInfo.new(0.2), {BackgroundColor3 = CONFIG.AccentColor}):Play()
end)

-- Animation du bouton de fermeture
CloseButton.MouseEnter:Connect(function()
    TweenService:Create(CloseButton, TweenInfo.new(0.2), {BackgroundColor3 = CONFIG.CloseButtonHoverColor}):Play()
end)

CloseButton.MouseLeave:Connect(function()
    TweenService:Create(CloseButton, TweenInfo.new(0.2), {BackgroundColor3 = CONFIG.CloseButtonColor}):Play()
end)

-- Fonction pour fermer le GUI
CloseButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)

-- Fonction pour exécuter le script
ExecuteButton.MouseButton1Click:Connect(function()
    if not selectedGame then
        StatusLabel.Text = "Select a game"
        StatusLabel.TextColor3 = CONFIG.ErrorColor
        return
    end
    
    local enteredKey = KeyInput.Text
    if enteredKey == "" then
        StatusLabel.Text = "Enter the key"
        StatusLabel.TextColor3 = CONFIG.ErrorColor
        return
    end
    
    if enteredKey == selectedGame.Key then
        StatusLabel.Text = "Key correct ! Exécution script..."
        StatusLabel.TextColor3 = CONFIG.SuccessColor
        
        -- Exécuter le script
        loadstring(selectedGame.Script)()
    else
        StatusLabel.Text = "Clé incorrect"
        StatusLabel.TextColor3 = CONFIG.ErrorColor
    end
end)

-- Fonction pour rendre la fenêtre déplaçable
local dragging
local dragInput
local dragStart
local startPos

local function updateDrag(input)
    local delta = input.Position - dragStart
    MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

TitleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

TitleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

-- Fonction pour redimensionner la fenêtre
local function updateResize(input)
    local delta = input.Position - resizeStart
    local newSize = Vector2.new(
        math.clamp(startSize.X + delta.X, CONFIG.MinSize.X, CONFIG.MaxSize.X),
        math.clamp(startSize.Y + delta.Y, CONFIG.MinSize.Y, CONFIG.MaxSize.Y)
    )
    MainFrame.Size = UDim2.new(0, newSize.X, 0, newSize.Y)
end

ResizeButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        resizing = true
        resizeStart = input.Position
        startSize = Vector2.new(MainFrame.AbsoluteSize.X, MainFrame.AbsoluteSize.Y)
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                resizing = false
            end
        end)
    end
end)

ResizeButton.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput then
        if dragging then
            updateDrag(input)
        elseif resizing then
            updateResize(input)
        end
    end
end)

-- Ajout des crédits dans la zone de statut
local function updateCredits()
    local currentIndex = 1
    local function cycleCredits()
        StatusLabel.Text = CREDITS[currentIndex]
        StatusLabel.TextSize = 18
        StatusLabel.Font = Enum.Font.GothamBold
        currentIndex = currentIndex + 1
        if currentIndex > #CREDITS then
            currentIndex = 1
        end
    end
    
    -- Afficher les crédits toutes les 2 secondes
    spawn(function()
        while wait(2) do
            cycleCredits()
        end
    end)
end

-- Appeler la fonction de mise à jour des crédits
updateCredits()

-- Gestion de la touche de toggle pour afficher/masquer le GUI principal
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and CONFIG.ToggleEnabled and input.KeyCode == CONFIG.ToggleKey then
        MainFrame.Visible = not MainFrame.Visible
        -- Fermer la fenêtre des paramètres si on cache le GUI principal
        if not MainFrame.Visible then
            SettingsFrame.Visible = false
        end
    end
end) 
